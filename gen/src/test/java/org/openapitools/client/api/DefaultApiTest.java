/*
 * SynergyAcademy
 * SynergyAcademy
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addCourseTest() throws ApiException {
        api.addCourse();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addExamTest() throws ApiException {
        Integer courseId = null;
        api.addExam(courseId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addStudentTest() throws ApiException {
        api.addStudent();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllCoursesTest() throws ApiException {
        api.getAllCourses();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllStudentsTest() throws ApiException {
        api.getAllStudents();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getClassifierTest() throws ApiException {
        String tableName = null;
        api.getClassifier(tableName);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getConfigTest() throws ApiException {
        String type = null;
        api.getConfig(type);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCourseByIdTest() throws ApiException {
        Integer courseId = null;
        api.getCourseById(courseId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEducationProcessByCourseIdTest() throws ApiException {
        Integer courseId = null;
        api.getEducationProcessByCourseId(courseId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEducationProcessByIdTest() throws ApiException {
        Integer educationProcessId = null;
        api.getEducationProcessById(educationProcessId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getExamByIdTest() throws ApiException {
        Integer examId = null;
        api.getExamById(examId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getExamsByCourseIdTest() throws ApiException {
        Integer courseId = null;
        api.getExamsByCourseId(courseId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getGradesByEducationProcessIdTest() throws ApiException {
        Integer educationProcessId = null;
        api.getGradesByEducationProcessId(educationProcessId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getResultsByExamIdTest() throws ApiException {
        Integer examId = null;
        api.getResultsByExamId(examId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getStudentByIdTest() throws ApiException {
        Integer studentId = null;
        api.getStudentById(studentId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getStudentsByCourseIdTest() throws ApiException {
        Integer courseId = null;
        api.getStudentsByCourseId(courseId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getStudentsByExamIdTest() throws ApiException {
        Integer examId = null;
        api.getStudentsByExamId(examId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCourseByIdTest() throws ApiException {
        Integer courseId = null;
        api.updateCourseById(courseId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateExamByIdTest() throws ApiException {
        Integer examId = null;
        api.updateExamById(examId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateResultsTest() throws ApiException {
        Integer examId = null;
        api.updateResults(examId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateStudentByIdTest() throws ApiException {
        Integer studentId = null;
        api.updateStudentById(studentId);

        // TODO: test validations
    }
    
}
